{
  "name": "netcore-debugger",
  "publisher": "nromanov",
  "version": "1.0.0",
  "description": "VSCode extension wrapper for Microsoft vsdbg",
  "displayName": ".NET Core Debugger",
  "author": "Nikita Romanov",
  "license": "MIT",
  "icon": "assets/logo.png",
  "preview": false,
  "repository": {
    "type": "git",
    "url": "https://github.com/JaneySprings/NETCore.Debugger.git"
  },
  "categories": [
    "Debuggers"
  ],
  "keywords": [
    "C#",
    ".NET",
    "dotnet"
  ],
  "engines": {
    "vscode": "^1.73.0"
  },
  "activationEvents": [
    "onLanguage:csharp",
    "onLanguage:fsharp",
    "workspaceContains:**/*.{csproj,fsproj,sln,slnf,csx}"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "breakpoints": [
      {
        "language": "csharp"
      },
      {
        "language": "razor"
      },
      {
        "language": "qsharp"
      },
      {
        "language": "aspnetcorerazor"
      }
    ],
    "debuggers": [
      {
        "osx": {
          "program": "debugger/vsdbg"
        },
        "linux": {
          "program": "debugger/vsdbg"
        },
        "windows": {
          "program": "debugger/vsdbg.exe"
        },
        "type": "coreclr",
        "label": ".NET 5+ and .NET Core",
        "hiddenWhen": "dotnet.debug.serviceBrokerAvailable",
        "languages": [
          "csharp",
          "razor",
          "qsharp",
          "aspnetcorerazor"
        ],
        "variables": {
          "pickProcess": "csharp.listProcess",
          "pickRemoteProcess": "csharp.listRemoteProcess",
          "pickRemoteDockerProcess": "csharp.listRemoteDockerProcess"
        },
        "configurationAttributes": {
          "launch": {
            "type": "object",
            "required": [
              "program"
            ],
            "properties": {
              "program": {
                "type": "string",
                "markdownDescription": "%generateOptionsSchema.program.markdownDescription%",
                "default": "${workspaceFolder}/bin/Debug/<insert-target-framework-here>/<insert-project-name-here>.dll"
              },
              "cwd": {
                "type": "string",
                "description": "%generateOptionsSchema.cwd.description%",
                "default": "${workspaceFolder}"
              },
              "args": {
                "anyOf": [
                  {
                    "type": "array",
                    "description": "%generateOptionsSchema.args.0.description%",
                    "items": {
                      "type": "string"
                    },
                    "default": []
                  },
                  {
                    "type": "string",
                    "description": "%generateOptionsSchema.args.1.description%",
                    "default": ""
                  }
                ]
              },
              "stopAtEntry": {
                "type": "boolean",
                "markdownDescription": "%generateOptionsSchema.stopAtEntry.markdownDescription%",
                "default": false
              },
              "launchBrowser": {
                "description": "%generateOptionsSchema.launchBrowser.description%",
                "default": {
                  "enabled": true
                },
                "type": "object",
                "required": [
                  "enabled"
                ],
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "%generateOptionsSchema.launchBrowser.enabled.description%",
                    "default": true
                  },
                  "args": {
                    "type": "string",
                    "description": "%generateOptionsSchema.launchBrowser.args.description%",
                    "default": "${auto-detect-url}"
                  },
                  "osx": {
                    "description": "%generateOptionsSchema.launchBrowser.osx.description%",
                    "default": {
                      "command": "open",
                      "args": "${auto-detect-url}"
                    },
                    "type": "object",
                    "required": [
                      "command"
                    ],
                    "properties": {
                      "command": {
                        "type": "string",
                        "description": "%generateOptionsSchema.launchBrowser.osx.command.description%",
                        "default": "open"
                      },
                      "args": {
                        "type": "string",
                        "description": "%generateOptionsSchema.launchBrowser.osx.args.description%",
                        "default": "${auto-detect-url}"
                      }
                    }
                  },
                  "linux": {
                    "description": "%generateOptionsSchema.launchBrowser.linux.description%",
                    "default": {
                      "command": "xdg-open",
                      "args": "${auto-detect-url}"
                    },
                    "type": "object",
                    "required": [
                      "command"
                    ],
                    "properties": {
                      "command": {
                        "type": "string",
                        "description": "%generateOptionsSchema.launchBrowser.linux.command.description%",
                        "default": "xdg-open"
                      },
                      "args": {
                        "type": "string",
                        "description": "%generateOptionsSchema.launchBrowser.linux.args.description%",
                        "default": "${auto-detect-url}"
                      }
                    }
                  },
                  "windows": {
                    "description": "%generateOptionsSchema.launchBrowser.windows.description%",
                    "default": {
                      "command": "cmd.exe",
                      "args": "/C start ${auto-detect-url}"
                    },
                    "type": "object",
                    "required": [
                      "command"
                    ],
                    "properties": {
                      "command": {
                        "type": "string",
                        "description": "%generateOptionsSchema.launchBrowser.windows.command.description%",
                        "default": "cmd.exe"
                      },
                      "args": {
                        "type": "string",
                        "description": "%generateOptionsSchema.launchBrowser.windows.args.description%",
                        "default": "/C start ${auto-detect-url}"
                      }
                    }
                  }
                }
              },
              "env": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "%generateOptionsSchema.env.description%",
                "default": {}
              },
              "envFile": {
                "type": "string",
                "markdownDescription": "%generateOptionsSchema.envFile.markdownDescription%",
                "default": "${workspaceFolder}/.env"
              },
              "console": {
                "type": "string",
                "enum": [
                  "internalConsole",
                  "integratedTerminal",
                  "externalTerminal"
                ],
                "enumDescriptions": [
                  "%generateOptionsSchema.console.internalConsole.enumDescription%",
                  "%generateOptionsSchema.console.integratedTerminal.enumDescription%",
                  "%generateOptionsSchema.console.externalTerminal.enumDescription%"
                ],
                "markdownDescription": "%generateOptionsSchema.console.markdownDescription%",
                "settingsDescription": "%generateOptionsSchema.console.settingsDescription%",
                "default": "internalConsole"
              },
              "externalConsole": {
                "type": "boolean",
                "markdownDescription": "%generateOptionsSchema.externalConsole.markdownDescription%",
                "default": false
              },
              "launchSettingsFilePath": {
                "type": "string",
                "markdownDescription": "%generateOptionsSchema.launchSettingsFilePath.markdownDescription%",
                "default": "${workspaceFolder}/Properties/launchSettings.json"
              },
              "launchSettingsProfile": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "%generateOptionsSchema.launchSettingsProfile.description%",
                "default": "<insert-profile-name>"
              },
              "sourceFileMap": {
                "type": "object",
                "markdownDescription": "%generateOptionsSchema.sourceFileMap.markdownDescription%",
                "additionalProperties": {
                  "type": "string"
                },
                "default": {}
              },
              "justMyCode": {
                "type": "boolean",
                "markdownDescription": "%generateOptionsSchema.justMyCode.markdownDescription%",
                "default": true
              },
              "requireExactSource": {
                "type": "boolean",
                "markdownDescription": "%generateOptionsSchema.requireExactSource.markdownDescription%",
                "default": true
              },
              "enableStepFiltering": {
                "type": "boolean",
                "markdownDescription": "%generateOptionsSchema.enableStepFiltering.markdownDescription%",
                "default": true
              },
              "logging": {
                "description": "%generateOptionsSchema.logging.description%",
                "type": "object",
                "required": [],
                "default": {},
                "properties": {
                  "exceptions": {
                    "type": "boolean",
                    "markdownDescription": "%generateOptionsSchema.logging.exceptions.markdownDescription%",
                    "default": true
                  },
                  "moduleLoad": {
                    "type": "boolean",
                    "markdownDescription": "%generateOptionsSchema.logging.moduleLoad.markdownDescription%",
                    "default": true
                  },
                  "programOutput": {
                    "type": "boolean",
                    "markdownDescription": "%generateOptionsSchema.logging.programOutput.markdownDescription%",
                    "default": true
                  },
                  "browserStdOut": {
                    "type": "boolean",
                    "markdownDescription": "%generateOptionsSchema.logging.browserStdOut.markdownDescription%",
                    "default": true
                  },
                  "elapsedTiming": {
                    "type": "boolean",
                    "markdownDescription": "%generateOptionsSchema.logging.elapsedTiming.markdownDescription%",
                    "default": false
                  },
                  "threadExit": {
                    "type": "boolean",
                    "markdownDescription": "%generateOptionsSchema.logging.threadExit.markdownDescription%",
                    "default": false
                  },
                  "processExit": {
                    "type": "boolean",
                    "markdownDescription": "%generateOptionsSchema.logging.processExit.markdownDescription%",
                    "default": true
                  },
                  "engineLogging": {
                    "type": "boolean",
                    "deprecationMessage": "%generateOptionsSchema.logging.engineLogging.deprecationMessage%",
                    "default": false
                  },
                  "diagnosticsLog": {
                    "description": "%generateOptionsSchema.logging.diagnosticsLog.description%",
                    "type": "object",
                    "required": [],
                    "default": {},
                    "properties": {
                      "protocolMessages": {
                        "type": "boolean",
                        "markdownDescription": "%generateOptionsSchema.logging.diagnosticsLog.protocolMessages.markdownDescription%",
                        "default": false
                      },
                      "dispatcherMessages": {
                        "type": "string",
                        "enum": [
                          "none",
                          "error",
                          "important",
                          "normal"
                        ],
                        "enumDescriptions": [
                          "%generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.none.enumDescription%",
                          "%generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.error.enumDescription%",
                          "%generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.important.enumDescription%",
                          "%generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.normal.enumDescription%"
                        ],
                        "markdownDescription": "%generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.markdownDescription%",
                        "default": "none"
                      },
                      "debugEngineAPITracing": {
                        "type": "string",
                        "enum": [
                          "none",
                          "error",
                          "all"
                        ],
                        "enumDescriptions": [
                          "%generateOptionsSchema.logging.diagnosticsLog.debugEngineAPITracing.none.enumDescription%",
                          "%generateOptionsSchema.logging.diagnosticsLog.debugEngineAPITracing.error.enumDescription%",
                          "%generateOptionsSchema.logging.diagnosticsLog.debugEngineAPITracing.all.enumDescription%"
                        ],
                        "markdownDescription": "%generateOptionsSchema.logging.diagnosticsLog.debugEngineAPITracing.markdownDescription%",
                        "default": "none"
                      },
                      "debugRuntimeEventTracing": {
                        "type": "boolean",
                        "markdownDescription": "%generateOptionsSchema.logging.diagnosticsLog.debugRuntimeEventTracing.markdownDescription%",
                        "default": false
                      },
                      "expressionEvaluationTracing": {
                        "type": "boolean",
                        "markdownDescription": "%generateOptionsSchema.logging.diagnosticsLog.expressionEvaluationTracing.markdownDescription%",
                        "default": false
                      },
                      "startDebuggingTracing": {
                        "type": "boolean",
                        "markdownDescription": "%generateOptionsSchema.logging.diagnosticsLog.startDebuggingTracing.markdownDescription%",
                        "default": false
                      }
                    }
                  },
                  "consoleUsageMessage": {
                    "type": "boolean",
                    "description": "%generateOptionsSchema.logging.consoleUsageMessage.description%",
                    "default": true
                  }
                }
              },
              "pipeTransport": {
                "description": "%generateOptionsSchema.pipeTransport.description%",
                "type": "object",
                "required": [
                  "debuggerPath"
                ],
                "default": {
                  "pipeCwd": "${workspaceFolder}",
                  "pipeProgram": "enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'",
                  "pipeArgs": [],
                  "debuggerPath": "enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"
                },
                "properties": {
                  "pipeCwd": {
                    "type": "string",
                    "description": "%generateOptionsSchema.pipeTransport.pipeCwd.description%",
                    "default": "${workspaceFolder}"
                  },
                  "pipeProgram": {
                    "type": "string",
                    "description": "%generateOptionsSchema.pipeTransport.pipeProgram.description%",
                    "default": "enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"
                  },
                  "pipeArgs": {
                    "anyOf": [
                      {
                        "type": "array",
                        "description": "%generateOptionsSchema.pipeTransport.pipeArgs.0.description%",
                        "items": {
                          "type": "string"
                        },
                        "default": []
                      },
                      {
                        "type": "string",
                        "description": "%generateOptionsSchema.pipeTransport.pipeArgs.1.description%",
                        "default": ""
                      }
                    ],
                    "default": []
                  },
                  "debuggerPath": {
                    "type": "string",
                    "description": "%generateOptionsSchema.pipeTransport.debuggerPath.description%",
                    "default": "enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"
                  },
                  "pipeEnv": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "%generateOptionsSchema.pipeTransport.pipeEnv.description%",
                    "default": {}
                  },
                  "quoteArgs": {
                    "type": "boolean",
                    "description": "%generateOptionsSchema.pipeTransport.quoteArgs.description%",
                    "default": true
                  },
                  "windows": {
                    "description": "%generateOptionsSchema.pipeTransport.windows.description%",
                    "default": {
                      "pipeCwd": "${workspaceFolder}",
                      "pipeProgram": "enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'",
                      "pipeArgs": []
                    },
                    "type": "object",
                    "properties": {
                      "pipeCwd": {
                        "type": "string",
                        "description": "%generateOptionsSchema.pipeTransport.windows.pipeCwd.description%",
                        "default": "${workspaceFolder}"
                      },
                      "pipeProgram": {
                        "type": "string",
                        "description": "%generateOptionsSchema.pipeTransport.windows.pipeProgram.description%",
                        "default": "enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"
                      },
                      "pipeArgs": {
                        "anyOf": [
                          {
                            "type": "array",
                            "description": "%generateOptionsSchema.pipeTransport.windows.pipeArgs.0.description%",
                            "items": {
                              "type": "string"
                            },
                            "default": []
                          },
                          {
                            "type": "string",
                            "description": "%generateOptionsSchema.pipeTransport.windows.pipeArgs.1.description%",
                            "default": ""
                          }
                        ],
                        "default": []
                      },
                      "quoteArgs": {
                        "type": "boolean",
                        "description": "%generateOptionsSchema.pipeTransport.windows.quoteArgs.description%",
                        "default": true
                      },
                      "pipeEnv": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "%generateOptionsSchema.pipeTransport.windows.pipeEnv.description%",
                        "default": {}
                      }
                    }
                  },
                  "osx": {
                    "description": "%generateOptionsSchema.pipeTransport.osx.description%",
                    "default": {
                      "pipeCwd": "${workspaceFolder}",
                      "pipeProgram": "enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'",
                      "pipeArgs": []
                    },
                    "type": "object",
                    "properties": {
                      "pipeCwd": {
                        "type": "string",
                        "description": "%generateOptionsSchema.pipeTransport.osx.pipeCwd.description%",
                        "default": "${workspaceFolder}"
                      },
                      "pipeProgram": {
                        "type": "string",
                        "description": "%generateOptionsSchema.pipeTransport.osx.pipeProgram.description%",
                        "default": "enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"
                      },
                      "pipeArgs": {
                        "anyOf": [
                          {
                            "type": "array",
                            "description": "%generateOptionsSchema.pipeTransport.osx.pipeArgs.0.description%",
                            "items": {
                              "type": "string"
                            },
                            "default": []
                          },
                          {
                            "type": "string",
                            "description": "%generateOptionsSchema.pipeTransport.osx.pipeArgs.1.description%",
                            "default": ""
                          }
                        ],
                        "default": []
                      },
                      "quoteArgs": {
                        "type": "boolean",
                        "description": "%generateOptionsSchema.pipeTransport.osx.quoteArgs.description%",
                        "default": true
                      },
                      "pipeEnv": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "%generateOptionsSchema.pipeTransport.osx.pipeEnv.description%",
                        "default": {}
                      }
                    }
                  },
                  "linux": {
                    "description": "%generateOptionsSchema.pipeTransport.linux.description%",
                    "default": {
                      "pipeCwd": "${workspaceFolder}",
                      "pipeProgram": "enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'",
                      "pipeArgs": []
                    },
                    "type": "object",
                    "properties": {
                      "pipeCwd": {
                        "type": "string",
                        "description": "%generateOptionsSchema.pipeTransport.linux.pipeCwd.description%",
                        "default": "${workspaceFolder}"
                      },
                      "pipeProgram": {
                        "type": "string",
                        "description": "%generateOptionsSchema.pipeTransport.linux.pipeProgram.description%",
                        "default": "enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"
                      },
                      "pipeArgs": {
                        "anyOf": [
                          {
                            "type": "array",
                            "description": "%generateOptionsSchema.pipeTransport.linux.pipeArgs.0.description%",
                            "items": {
                              "type": "string"
                            },
                            "default": []
                          },
                          {
                            "type": "string",
                            "description": "%generateOptionsSchema.pipeTransport.linux.pipeArgs.1.description%",
                            "default": ""
                          }
                        ],
                        "default": []
                      },
                      "quoteArgs": {
                        "type": "boolean",
                        "description": "%generateOptionsSchema.pipeTransport.linux.quoteArgs.description%",
                        "default": true
                      },
                      "pipeEnv": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "%generateOptionsSchema.pipeTransport.linux.pipeEnv.description%",
                        "default": {}
                      }
                    }
                  }
                }
              },
              "suppressJITOptimizations": {
                "type": "boolean",
                "markdownDescription": "%generateOptionsSchema.suppressJITOptimizations.markdownDescription%",
                "default": false
              },
              "symbolOptions": {
                "description": "%generateOptionsSchema.symbolOptions.description%",
                "default": {
                  "searchPaths": [],
                  "searchMicrosoftSymbolServer": false,
                  "searchNuGetOrgSymbolServer": false
                },
                "type": "object",
                "properties": {
                  "searchPaths": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "%generateOptionsSchema.symbolOptions.searchPaths.description%",
                    "default": []
                  },
                  "searchMicrosoftSymbolServer": {
                    "type": "boolean",
                    "description": "%generateOptionsSchema.symbolOptions.searchMicrosoftSymbolServer.description%",
                    "default": false
                  },
                  "searchNuGetOrgSymbolServer": {
                    "type": "boolean",
                    "description": "%generateOptionsSchema.symbolOptions.searchNuGetOrgSymbolServer.description%",
                    "default": false
                  },
                  "cachePath": {
                    "type": "string",
                    "description": "%generateOptionsSchema.symbolOptions.cachePath.description%",
                    "default": ""
                  },
                  "moduleFilter": {
                    "description": "%generateOptionsSchema.symbolOptions.moduleFilter.description%",
                    "default": {
                      "mode": "loadAllButExcluded",
                      "excludedModules": []
                    },
                    "type": "object",
                    "required": [
                      "mode"
                    ],
                    "properties": {
                      "mode": {
                        "type": "string",
                        "enum": [
                          "loadAllButExcluded",
                          "loadOnlyIncluded"
                        ],
                        "enumDescriptions": [
                          "%generateOptionsSchema.symbolOptions.moduleFilter.mode.loadAllButExcluded.enumDescription%",
                          "%generateOptionsSchema.symbolOptions.moduleFilter.mode.loadOnlyIncluded.enumDescription%"
                        ],
                        "description": "%generateOptionsSchema.symbolOptions.moduleFilter.mode.description%",
                        "default": "loadAllButExcluded"
                      },
                      "excludedModules": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "%generateOptionsSchema.symbolOptions.moduleFilter.excludedModules.description%",
                        "default": []
                      },
                      "includedModules": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "%generateOptionsSchema.symbolOptions.moduleFilter.includedModules.description%",
                        "default": []
                      },
                      "includeSymbolsNextToModules": {
                        "type": "boolean",
                        "description": "%generateOptionsSchema.symbolOptions.moduleFilter.includeSymbolsNextToModules.description%",
                        "default": true
                      }
                    }
                  }
                }
              },
              "sourceLinkOptions": {
                "markdownDescription": "%generateOptionsSchema.sourceLinkOptions.markdownDescription%",
                "default": {
                  "*": {
                    "enabled": true
                  }
                },
                "type": "object",
                "additionalItems": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "title": "boolean",
                      "markdownDescription": "%generateOptionsSchema.sourceLinkOptions.additionalItems.enabled.markdownDescription%",
                      "default": "true"
                    }
                  }
                }
              },
              "allowFastEvaluate": {
                "type": "boolean",
                "description": "%generateOptionsSchema.allowFastEvaluate.description%",
                "default": true
              },
              "targetOutputLogPath": {
                "type": "string",
                "description": "%generateOptionsSchema.targetOutputLogPath.description%",
                "default": ""
              },
              "targetArchitecture": {
                "type": "string",
                "markdownDescription": "%generateOptionsSchema.targetArchitecture.markdownDescription%",
                "enum": [
                  "x86_64",
                  "arm64"
                ]
              },
              "checkForDevCert": {
                "type": "boolean",
                "description": "%generateOptionsSchema.checkForDevCert.description%",
                "default": true
              }
            }
          },
          "attach": {
            "type": "object",
            "required": [],
            "properties": {
              "processName": {
                "type": "string",
                "default": "",
                "markdownDescription": "%generateOptionsSchema.processName.markdownDescription%"
              },
              "processId": {
                "anyOf": [
                  {
                    "type": "string",
                    "markdownDescription": "%generateOptionsSchema.processId.0.markdownDescription%",
                    "default": ""
                  },
                  {
                    "type": "integer",
                    "markdownDescription": "%generateOptionsSchema.processId.1.markdownDescription%",
                    "default": 0
                  }
                ]
              },
              "sourceFileMap": {
                "type": "object",
                "markdownDescription": "%generateOptionsSchema.sourceFileMap.markdownDescription%",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "justMyCode": {
                "type": "boolean",
                "markdownDescription": "%generateOptionsSchema.justMyCode.markdownDescription%",
                "default": true
              },
              "requireExactSource": {
                "type": "boolean",
                "markdownDescription": "%generateOptionsSchema.requireExactSource.markdownDescription%",
                "default": true
              },
              "enableStepFiltering": {
                "type": "boolean",
                "markdownDescription": "%generateOptionsSchema.enableStepFiltering.markdownDescription%",
                "default": true
              },
              "logging": {
                "description": "%generateOptionsSchema.logging.description%",
                "type": "object",
                "required": [],
                "default": {},
                "properties": {
                  "exceptions": {
                    "type": "boolean",
                    "markdownDescription": "%generateOptionsSchema.logging.exceptions.markdownDescription%",
                    "default": true
                  },
                  "moduleLoad": {
                    "type": "boolean",
                    "markdownDescription": "%generateOptionsSchema.logging.moduleLoad.markdownDescription%",
                    "default": true
                  },
                  "programOutput": {
                    "type": "boolean",
                    "markdownDescription": "%generateOptionsSchema.logging.programOutput.markdownDescription%",
                    "default": true
                  },
                  "browserStdOut": {
                    "type": "boolean",
                    "markdownDescription": "%generateOptionsSchema.logging.browserStdOut.markdownDescription%",
                    "default": true
                  },
                  "elapsedTiming": {
                    "type": "boolean",
                    "markdownDescription": "%generateOptionsSchema.logging.elapsedTiming.markdownDescription%",
                    "default": false
                  },
                  "threadExit": {
                    "type": "boolean",
                    "markdownDescription": "%generateOptionsSchema.logging.threadExit.markdownDescription%",
                    "default": false
                  },
                  "processExit": {
                    "type": "boolean",
                    "markdownDescription": "%generateOptionsSchema.logging.processExit.markdownDescription%",
                    "default": true
                  },
                  "engineLogging": {
                    "type": "boolean",
                    "deprecationMessage": "%generateOptionsSchema.logging.engineLogging.deprecationMessage%",
                    "default": false
                  },
                  "diagnosticsLog": {
                    "description": "%generateOptionsSchema.logging.diagnosticsLog.description%",
                    "type": "object",
                    "required": [],
                    "default": {},
                    "properties": {
                      "protocolMessages": {
                        "type": "boolean",
                        "markdownDescription": "%generateOptionsSchema.logging.diagnosticsLog.protocolMessages.markdownDescription%",
                        "default": false
                      },
                      "dispatcherMessages": {
                        "type": "string",
                        "enum": [
                          "none",
                          "error",
                          "important",
                          "normal"
                        ],
                        "enumDescriptions": [
                          "%generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.none.enumDescription%",
                          "%generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.error.enumDescription%",
                          "%generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.important.enumDescription%",
                          "%generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.normal.enumDescription%"
                        ],
                        "markdownDescription": "%generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.markdownDescription%",
                        "default": "none"
                      },
                      "debugEngineAPITracing": {
                        "type": "string",
                        "enum": [
                          "none",
                          "error",
                          "all"
                        ],
                        "enumDescriptions": [
                          "%generateOptionsSchema.logging.diagnosticsLog.debugEngineAPITracing.none.enumDescription%",
                          "%generateOptionsSchema.logging.diagnosticsLog.debugEngineAPITracing.error.enumDescription%",
                          "%generateOptionsSchema.logging.diagnosticsLog.debugEngineAPITracing.all.enumDescription%"
                        ],
                        "markdownDescription": "%generateOptionsSchema.logging.diagnosticsLog.debugEngineAPITracing.markdownDescription%",
                        "default": "none"
                      },
                      "debugRuntimeEventTracing": {
                        "type": "boolean",
                        "markdownDescription": "%generateOptionsSchema.logging.diagnosticsLog.debugRuntimeEventTracing.markdownDescription%",
                        "default": false
                      },
                      "expressionEvaluationTracing": {
                        "type": "boolean",
                        "markdownDescription": "%generateOptionsSchema.logging.diagnosticsLog.expressionEvaluationTracing.markdownDescription%",
                        "default": false
                      },
                      "startDebuggingTracing": {
                        "type": "boolean",
                        "markdownDescription": "%generateOptionsSchema.logging.diagnosticsLog.startDebuggingTracing.markdownDescription%",
                        "default": false
                      }
                    }
                  },
                  "consoleUsageMessage": {
                    "type": "boolean",
                    "description": "%generateOptionsSchema.logging.consoleUsageMessage.description%",
                    "default": true
                  }
                }
              },
              "pipeTransport": {
                "description": "%generateOptionsSchema.pipeTransport.description%",
                "type": "object",
                "required": [
                  "debuggerPath"
                ],
                "default": {
                  "pipeCwd": "${workspaceFolder}",
                  "pipeProgram": "enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'",
                  "pipeArgs": [],
                  "debuggerPath": "enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"
                },
                "properties": {
                  "pipeCwd": {
                    "type": "string",
                    "description": "%generateOptionsSchema.pipeTransport.pipeCwd.description%",
                    "default": "${workspaceFolder}"
                  },
                  "pipeProgram": {
                    "type": "string",
                    "description": "%generateOptionsSchema.pipeTransport.pipeProgram.description%",
                    "default": "enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"
                  },
                  "pipeArgs": {
                    "anyOf": [
                      {
                        "type": "array",
                        "description": "%generateOptionsSchema.pipeTransport.pipeArgs.0.description%",
                        "items": {
                          "type": "string"
                        },
                        "default": []
                      },
                      {
                        "type": "string",
                        "description": "%generateOptionsSchema.pipeTransport.pipeArgs.1.description%",
                        "default": ""
                      }
                    ],
                    "default": []
                  },
                  "debuggerPath": {
                    "type": "string",
                    "description": "%generateOptionsSchema.pipeTransport.debuggerPath.description%",
                    "default": "enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"
                  },
                  "pipeEnv": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "%generateOptionsSchema.pipeTransport.pipeEnv.description%",
                    "default": {}
                  },
                  "quoteArgs": {
                    "type": "boolean",
                    "description": "%generateOptionsSchema.pipeTransport.quoteArgs.description%",
                    "default": true
                  },
                  "windows": {
                    "description": "%generateOptionsSchema.pipeTransport.windows.description%",
                    "default": {
                      "pipeCwd": "${workspaceFolder}",
                      "pipeProgram": "enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'",
                      "pipeArgs": []
                    },
                    "type": "object",
                    "properties": {
                      "pipeCwd": {
                        "type": "string",
                        "description": "%generateOptionsSchema.pipeTransport.windows.pipeCwd.description%",
                        "default": "${workspaceFolder}"
                      },
                      "pipeProgram": {
                        "type": "string",
                        "description": "%generateOptionsSchema.pipeTransport.windows.pipeProgram.description%",
                        "default": "enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"
                      },
                      "pipeArgs": {
                        "anyOf": [
                          {
                            "type": "array",
                            "description": "%generateOptionsSchema.pipeTransport.windows.pipeArgs.0.description%",
                            "items": {
                              "type": "string"
                            },
                            "default": []
                          },
                          {
                            "type": "string",
                            "description": "%generateOptionsSchema.pipeTransport.windows.pipeArgs.1.description%",
                            "default": ""
                          }
                        ],
                        "default": []
                      },
                      "quoteArgs": {
                        "type": "boolean",
                        "description": "%generateOptionsSchema.pipeTransport.windows.quoteArgs.description%",
                        "default": true
                      },
                      "pipeEnv": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "%generateOptionsSchema.pipeTransport.windows.pipeEnv.description%",
                        "default": {}
                      }
                    }
                  },
                  "osx": {
                    "description": "%generateOptionsSchema.pipeTransport.osx.description%",
                    "default": {
                      "pipeCwd": "${workspaceFolder}",
                      "pipeProgram": "enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'",
                      "pipeArgs": []
                    },
                    "type": "object",
                    "properties": {
                      "pipeCwd": {
                        "type": "string",
                        "description": "%generateOptionsSchema.pipeTransport.osx.pipeCwd.description%",
                        "default": "${workspaceFolder}"
                      },
                      "pipeProgram": {
                        "type": "string",
                        "description": "%generateOptionsSchema.pipeTransport.osx.pipeProgram.description%",
                        "default": "enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"
                      },
                      "pipeArgs": {
                        "anyOf": [
                          {
                            "type": "array",
                            "description": "%generateOptionsSchema.pipeTransport.osx.pipeArgs.0.description%",
                            "items": {
                              "type": "string"
                            },
                            "default": []
                          },
                          {
                            "type": "string",
                            "description": "%generateOptionsSchema.pipeTransport.osx.pipeArgs.1.description%",
                            "default": ""
                          }
                        ],
                        "default": []
                      },
                      "quoteArgs": {
                        "type": "boolean",
                        "description": "%generateOptionsSchema.pipeTransport.osx.quoteArgs.description%",
                        "default": true
                      },
                      "pipeEnv": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "%generateOptionsSchema.pipeTransport.osx.pipeEnv.description%",
                        "default": {}
                      }
                    }
                  },
                  "linux": {
                    "description": "%generateOptionsSchema.pipeTransport.linux.description%",
                    "default": {
                      "pipeCwd": "${workspaceFolder}",
                      "pipeProgram": "enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'",
                      "pipeArgs": []
                    },
                    "type": "object",
                    "properties": {
                      "pipeCwd": {
                        "type": "string",
                        "description": "%generateOptionsSchema.pipeTransport.linux.pipeCwd.description%",
                        "default": "${workspaceFolder}"
                      },
                      "pipeProgram": {
                        "type": "string",
                        "description": "%generateOptionsSchema.pipeTransport.linux.pipeProgram.description%",
                        "default": "enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"
                      },
                      "pipeArgs": {
                        "anyOf": [
                          {
                            "type": "array",
                            "description": "%generateOptionsSchema.pipeTransport.linux.pipeArgs.0.description%",
                            "items": {
                              "type": "string"
                            },
                            "default": []
                          },
                          {
                            "type": "string",
                            "description": "%generateOptionsSchema.pipeTransport.linux.pipeArgs.1.description%",
                            "default": ""
                          }
                        ],
                        "default": []
                      },
                      "quoteArgs": {
                        "type": "boolean",
                        "description": "%generateOptionsSchema.pipeTransport.linux.quoteArgs.description%",
                        "default": true
                      },
                      "pipeEnv": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "%generateOptionsSchema.pipeTransport.linux.pipeEnv.description%",
                        "default": {}
                      }
                    }
                  }
                }
              },
              "suppressJITOptimizations": {
                "type": "boolean",
                "markdownDescription": "%generateOptionsSchema.suppressJITOptimizations.markdownDescription%",
                "default": false
              },
              "symbolOptions": {
                "description": "%generateOptionsSchema.symbolOptions.description%",
                "default": {
                  "searchPaths": [],
                  "searchMicrosoftSymbolServer": false,
                  "searchNuGetOrgSymbolServer": false
                },
                "type": "object",
                "properties": {
                  "searchPaths": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "%generateOptionsSchema.symbolOptions.searchPaths.description%",
                    "default": []
                  },
                  "searchMicrosoftSymbolServer": {
                    "type": "boolean",
                    "description": "%generateOptionsSchema.symbolOptions.searchMicrosoftSymbolServer.description%",
                    "default": false
                  },
                  "searchNuGetOrgSymbolServer": {
                    "type": "boolean",
                    "description": "%generateOptionsSchema.symbolOptions.searchNuGetOrgSymbolServer.description%",
                    "default": false
                  },
                  "cachePath": {
                    "type": "string",
                    "description": "%generateOptionsSchema.symbolOptions.cachePath.description%",
                    "default": ""
                  },
                  "moduleFilter": {
                    "description": "%generateOptionsSchema.symbolOptions.moduleFilter.description%",
                    "default": {
                      "mode": "loadAllButExcluded",
                      "excludedModules": []
                    },
                    "type": "object",
                    "required": [
                      "mode"
                    ],
                    "properties": {
                      "mode": {
                        "type": "string",
                        "enum": [
                          "loadAllButExcluded",
                          "loadOnlyIncluded"
                        ],
                        "enumDescriptions": [
                          "%generateOptionsSchema.symbolOptions.moduleFilter.mode.loadAllButExcluded.enumDescription%",
                          "%generateOptionsSchema.symbolOptions.moduleFilter.mode.loadOnlyIncluded.enumDescription%"
                        ],
                        "description": "%generateOptionsSchema.symbolOptions.moduleFilter.mode.description%",
                        "default": "loadAllButExcluded"
                      },
                      "excludedModules": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "%generateOptionsSchema.symbolOptions.moduleFilter.excludedModules.description%",
                        "default": []
                      },
                      "includedModules": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "%generateOptionsSchema.symbolOptions.moduleFilter.includedModules.description%",
                        "default": []
                      },
                      "includeSymbolsNextToModules": {
                        "type": "boolean",
                        "description": "%generateOptionsSchema.symbolOptions.moduleFilter.includeSymbolsNextToModules.description%",
                        "default": true
                      }
                    }
                  }
                }
              },
              "sourceLinkOptions": {
                "markdownDescription": "%generateOptionsSchema.sourceLinkOptions.markdownDescription%",
                "default": {
                  "*": {
                    "enabled": true
                  }
                },
                "type": "object",
                "additionalItems": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "title": "boolean",
                      "markdownDescription": "%generateOptionsSchema.sourceLinkOptions.additionalItems.enabled.markdownDescription%",
                      "default": "true"
                    }
                  }
                }
              },
              "allowFastEvaluate": {
                "type": "boolean",
                "description": "%generateOptionsSchema.allowFastEvaluate.description%",
                "default": true
              },
              "targetArchitecture": {
                "type": "string",
                "markdownDescription": "%generateOptionsSchema.targetArchitecture.markdownDescription%",
                "enum": [
                  "x86_64",
                  "arm64"
                ]
              }
            }
          }
        },
        "configurationSnippets": [
          {
            "label": "%debuggers.coreclr.configurationSnippets.label.console-local%",
            "description": "%debuggers.coreclr.configurationSnippets.description.console-local%",
            "body": {
              "name": ".NET Core Launch (console)",
              "type": "coreclr",
              "request": "launch",
              "preLaunchTask": "build",
              "program": "^\"\\${workspaceFolder}/bin/Debug/${1:<target-framework>}/${2:<project-name.dll>}\"",
              "args": [],
              "cwd": "^\"\\${workspaceFolder}\"",
              "stopAtEntry": false,
              "console": "internalConsole"
            }
          },
          {
            "label": "%debuggers.coreclr.configurationSnippets.label.attach-local%",
            "description": "%debuggers.coreclr.configurationSnippets.description.attach%",
            "body": {
              "name": ".NET Core Attach",
              "type": "coreclr",
              "request": "attach"
            }
          },
          {
            "label": "%debuggers.coreclr.configurationSnippets.label.web-local%",
            "description": "%debuggers.coreclr.configurationSnippets.description.web-local%",
            "body": {
              "name": ".NET Core Launch (web)",
              "type": "coreclr",
              "request": "launch",
              "preLaunchTask": "build",
              "program": "^\"\\${workspaceFolder}/bin/Debug/${1:<target-framework>}/${2:<project-name.dll>}\"",
              "args": [],
              "cwd": "^\"\\${workspaceFolder}\"",
              "stopAtEntry": false,
              "serverReadyAction": {
                "action": "openExternally",
                "pattern": "\\\\bNow listening on:\\\\s+(https?://\\\\S+)"
              },
              "env": {
                "ASPNETCORE_ENVIRONMENT": "Development"
              },
              "sourceFileMap": {
                "/Views": "^\"\\${workspaceFolder}/Views\""
              }
            }
          },
          {
            "label": "%debuggers.coreclr.configurationSnippets.label.console-remote%",
            "description": "%debuggers.coreclr.configurationSnippets.description.remote%",
            "body": {
              "name": ".NET Core Launch (console)",
              "type": "coreclr",
              "request": "launch",
              "preLaunchTask": "build",
              "program": "^\"\\${workspaceFolder}/bin/Debug/${1:<target-framework>}/${2:<project-name.dll>}\"",
              "args": [],
              "cwd": "^\"\\${workspaceFolder}\"",
              "stopAtEntry": false,
              "console": "internalConsole",
              "pipeTransport": {
                "pipeCwd": "^\"\\${workspaceFolder}\"",
                "pipeProgram": "^\"${3:enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'}\"",
                "pipeArgs": [],
                "debuggerPath": "^\"${4:enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg}\""
              }
            }
          },
          {
            "label": "%debuggers.coreclr.configurationSnippets.label.attach-remote%",
            "description": "%debuggers.coreclr.configurationSnippets.description.remote%",
            "body": {
              "name": ".NET Core Attach",
              "type": "coreclr",
              "request": "attach",
              "pipeTransport": {
                "pipeCwd": "^\"\\${workspaceFolder}\"",
                "pipeProgram": "^\"${1:enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'}\"",
                "pipeArgs": [],
                "debuggerPath": "^\"${2:enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg}\""
              }
            }
          },
          {
            "label": "%debuggers.coreclr.configurationSnippets.label.blazor-hosted%",
            "description": "%debuggers.coreclr.configurationSnippets.description.blazor-hosted%",
            "body": {
              "name": "Launch and Debug Hosted Blazor WebAssembly App",
              "type": "blazorwasm",
              "request": "launch",
              "hosted": true,
              "program": "^\"\\${workspaceFolder}/bin/Debug/${1:<target-framework>}/${2:<project-name.dll>}\"",
              "cwd": "^\"\\${workspaceFolder}\""
            }
          },
          {
            "label": "%debuggers.coreclr.configurationSnippets.label.blazor-standalone%",
            "description": "%debuggers.coreclr.configurationSnippets.description.blazor-standalone%",
            "body": {
              "name": "Launch and Debug Standalone Blazor WebAssembly App",
              "type": "blazorwasm",
              "request": "launch",
              "cwd": "^\"\\${workspaceFolder}\""
            }
          }
        ]
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "tsc -watch -p ./tsconfig.json",
    "package": "webpack --mode production --devtool hidden-source-map"
  },
  "devDependencies": {
    "@types/node": "16.x",
    "@types/node-fetch": "^2.6.7",
    "@types/vscode": "^1.73.0",
    "ts-loader": "^9.4.1",
    "typescript": "^4.8.4",
    "webpack": "^5.74.0",
    "webpack-cli": "^4.10.0"
  }
}
